version: '3'

services:

    frontend:
        image: jarviis/frontend:${TAG:-v1}
        build:
            context: ./frontend
            dockerfile: Dockerfile
        tty: true
        ports:
            - "3000:80"
        volumes: 
            - ./frontend:/app
            - /app/node_modules
        networks:
            - frontend

    mongodb:
        image: mongo
        container_name: mongo
        restart: unless-stopped
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: "root"
            MONGO_INITDB_ROOT_PASSWORD: "root"
            MONGO_INITDB_DATABASE: mongo
            MONGODB_DATA_DIR: /data/db
        volumes:
        - mongodbdata:/data/db
        networks:
        - backend

    backend:
        image: jarviis/backend:${TAG:-v1}
        build: 
            context: ./backend
            dockerfile: Dockerfile
        ports:
            - "3001:80"
        environment:
            MONGODB_HOST: mongodb
            MONGODB_USERNAME: "root"
            MONGODB_PASSWORD: "root"
        volumes:
            - appdata:/var/www/
        depends_on: 
            - mongodb
        networks:
            - frontend
            - backend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
    appdata:
        driver: local

# version: '3.3'
 
# services:
#   web:
#     image: nginx:latest # nginx 이미지
#     container_name: web # 컨테이너 명
#     restart: "on-failure" # 구동 실패 시 재시작
#     ports:
#       - 80:80
#     volumes: # 볼륨 설정
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#       - ./packages/client/build:/usr/share/nginx/html
 
#   server:
#     build: # Dockerfile 빌드
#       context: ./packages/server # Dockerfile 빌드 경로
#     container_name: server # 컨테이너 명
#     restart: "on-failure"
#     expose:
#       - 8080 # 도커 내부적 포트
#     volumes: # 볼륨 설정
#       - './packages/server:/app'
#       - '/app/node_modules'
#     environment: # 환경변수 설정
#       - NODE_ENV=development
#       - CHOKIDAR_USEPOLLING=true
#     stdin_open: true
#     tty: true


# version: "3"

# services:
#   mongodb:
#     container_name: mongo
#     hostname: mongo
#     image: mongo:5.0.2
#     restart: always
#     env_file: ./.env
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME= root
#       - MONGO_INITDB_ROOT_PASSWORD= root
#     ports:
#       - 27017:27017
#     command: [ "--bind_ip", "0.0.0.0" ]
#     volumes:
#       - /data/db
#     networks:
#     - backend

  
#   backend:
#     depends_on:
#       - mongodb
#     build: ./backend
#     restart: always
#     env_file: ./.env
#     ports:
#       - 27071:80
#     environment:
#       - DB_HOST=mongodb
#       - DB_USER=root
#       - DB_PASSWORD=root
#       - DB_NAME=mongodb
#       - DB_PORT=27017:27017
#       - CLIENT_ORIGIN=http://127.0.0.1:3000
#     networks:
#       - backend
#       - frontend

#   frontend:
#     depends_on:
#       - backend
#     build:
#       context: ./frontend
#       args:
#         - REACT_APP_API_BASE_URL=http://127.0.0.1:3000
#     ports:
#       - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
#     networks:
#       - frontend  

# volumes:
#   db:

# networks:
#   backend:
#   frontend: